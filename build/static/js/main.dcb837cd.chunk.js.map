{"version":3,"sources":["components/Header/Header.js","components/Feedback/YourFeedback.js","components/Feeling/Feeling.js","components/Understanding/Understanding.js","components/Support/Supported.js","components/Comments/Comments.js","components/ThankYou/ThankYou.js","components/App/App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","Comments","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitClick","setState","feeling","reduxStore","feelingToday","understanding","understandToday","support","supportLevel","comments","addComments","console","log","state","axios","method","url","data","then","response","history","push","catch","error","alert","disableBtn","Button_default","variant","color","disabled","onClick","Card_default","Typography_default","CardContent_default","CardActions_default","connect","Feeling","setFeeling","feelingChange","event","target","value","action","type","payload","dispatch","onChange","YourFeedback","Understanding","setUnderstanding","understandingChange","placeholder","Support","setSupport","supportChange","setComment","commentChange","ThankYou","thankClick","class","App","components_Header_Header","HashRouter","Route","exact","path","component","Supported","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","combineReducers","arguments","length","undefined","applyMiddleware","logger","ReactDOM","render","es","components_App_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dcb837cd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App/App.css';\n\n\nclass Header extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h1 className=\"App-title\">Daily Feedback</h1>\n                    <h4><i>Don't forget it!</i></h4>\n                </header>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './Feedback.css';\n\n\nclass Comments extends Component {\n    constructor(props){\n        super(props);\n        this.state ={\n            feeling: 0,\n            understanding: 0,\n            support: 0,\n            comments: '',\n        };\n    \n                //disable the next button until a value is selected\n        this.disableBtn = () => {\n            if (this.props.reduxStore.addComments.comments === '') {\n                return <Button variant=\"contained\" color=\"primary\" disabled>Submit Review</Button>\n            } else {\n                return <Button className=\"submitButton\"\n                                    onClick={this.submitClick}    \n                                    variant=\"contained\" \n                                    color=\"primary\">Submit Review</Button>\n                    }\n                }       \n        } \n\n        submitClick = () => {\n            this.setState({\n                feeling: this.props.reduxStore.feelingToday.feeling,\n                understanding: this.props.reduxStore.understandToday.understanding,\n                support: this.props.reduxStore.supportLevel.support,\n                comments: this.props.reduxStore.addComments.comments\n            });  console.log('Submit', this.state);\n         axios ({\n             method: 'POST',\n             url: '/feedback',\n             data: this.state\n         }).then((response) => {\n            this.props.history.push('/ThankYou');\n        }).catch((error) => {\n            console.log('POST Error', error)\n            alert('POST Error');\n        })\n     }\n        \n   \n\n    render() {\n        return (\n            <div>\n                {/* {JSON.stringify.this.state} */}\n            <Card className=\"reviewCard\">\n                <Typography className=\"reviewHeader\">\n                    Reivew Your Feedback\n                </Typography>\n                <CardContent>\n                    <Typography className=\"reviewBody\">\n                        Feeling:{this.props.reduxStore.feelingToday.feeling}\n                        <br />\n                        Understand:{this.props.reduxStore.understandToday.understanding}\n                        <br />\n                        Support:{this.props.reduxStore.supportLevel.support}\n                        <br />\n                        Comments:{this.props.reduxStore.addComments.comments}\n                    </Typography>\n                </CardContent>\n                <CardActions className=\"submitButton\">\n                        {this.disableBtn()}\n                </CardActions>\n            </Card>\n        </div>\n\n        );\n    }\n}\nconst mapReduxStoreToProps = (reduxStore) => ({\n    reduxStore: reduxStore\n})\n\nexport default connect(mapReduxStoreToProps)(Comments);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport YourFeedback from '../Feedback/YourFeedback.js';\n// import ReactDOM from 'react-dom';\n// import InputRange from 'react-input-range';\nimport Card from '@material-ui/core/Card';\n// import { withStyles } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport './Feeling.css';\n\nimport 'react-input-range/lib/css/index.css'\n\nfunction mapReduxStoreToProps(state) {\n    return {\n\n    };\n}\n\nclass Feeling extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            feeling:  0,\n        };\n\n        //disable the next button until a value is selected\n        this.disableBtn = () => {\n            if (this.state.feeling === 0) {\n                return <Button variant=\"contained\" color=\"primary\" disabled>Next</Button>\n            } else {\n                return <Button className=\"nextBtn\"\n                onClick={this.setFeeling} variant=\"contained\" color=\"primary\">Next</Button>\n            };\n        }\n        \n        //handle the state state change from the input\n        this.feelingChange = (event) => {\n                this.setState({\n                    feeling: event.target.value\n                });\n        }\n\n        //handle the onClick and move user to next page\n        this.setFeeling = () => {\n            const action = {type: 'SET_FEELING',\n                            payload:this.state,\n            };\n            this.props.dispatch(action);\n            this.props.history.push('/Understanding');\n        }\n        \n    }\n    render() {\n        return (\n           \n            <div>\n                <Card className=\"card\">\n                    <Typography className=\"cardHeader\">\n                        How are you Felling Today? \n                    </Typography>\n                    <Typography className=\"cardBody\">\n                        <CardContent>\n                            <select onChange={this.feelingChange} className=\"cardBody\">\n                                <option></option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                            </select>\n                        </CardContent>\n                    </Typography>\n                    <CardActions className=\"nextButton\">\n                         {this.disableBtn()}\n                    </CardActions>\n                </Card>\n                <YourFeedback />\n                </div>\n        );\n    }\n}\n// ReactDOM.render(<Feeling />,document.getElementById('app')); \nexport default connect(mapReduxStoreToProps,)(Feeling);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport YourFeedback from '../Feedback/YourFeedback.js';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../Feeling/Feeling.css';\n\nfunction mapReduxStoreToProps(state) {\n    return {\n\n    };\n}\n\nclass Understanding extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            understanding:  0,\n        };\n\n         //disable the next button until a value is selected\n         this.disableBtn = () => {\n            if (this.state.understanding === 0) {\n                return <Button variant=\"contained\" color=\"primary\" disabled>Next</Button>\n            } else {\n                return <Button className=\"nextBtn\"\n                                onClick={this.setUnderstanding}     \n                                variant=\"contained\" \n                                color=\"primary\">Next</Button>\n            }\n        }\n\n        // set the state \n        this.understandingChange = (event) => {\n                this.setState({\n                    understanding: event.target.value\n                })\n        }\n\n        //handle onClick and send the state to the Store \n        this.setUnderstanding = () => {\n            const action = {type: 'UNDERSTAND_TODAY',\n                            payload:this.state,\n            };\n            this.props.dispatch(action);\n            this.props.history.push('/Supported');\n        }\n        \n    }\n\n    render() {\n        return (\n            <div>\n               <Card className=\"card\">\n                    <Typography className=\"cardHeader\">\n                        How well are you understanding the material?\n                    </Typography>\n                    <Typography className=\"cardBody\">\n                        <CardContent>\n                            <select onChange={this.understandingChange}  className=\"cardBody\" placeholder=\"Understanding?\"  >\n                                <option></option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                            </select>\n                        </CardContent>\n                    </Typography>\n                    <CardActions className=\"nextButton\">\n                        {this.disableBtn()}\n                    </CardActions>\n                </Card>\n                <YourFeedback />\n            </div>\n        );\n    }\n}\n// ReactDOM.render(<App />,document.getElementById('app')); \nexport default connect(mapReduxStoreToProps,)(Understanding);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport YourFeedback from '../Feedback/YourFeedback.js';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../Feeling/Feeling.css';\n\n\nfunction mapReduxStoreToProps(state) {\n    return {\n\n    };\n}\n\nclass Support extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            support:  0,\n        };\n\n         //disable the next button until a value is selected\n         this.disableBtn = () => {\n            if (this.state.support === 0) {\n                return <Button variant=\"contained\" color=\"primary\" disabled>Next</Button>\n            } else {\n                return <Button className=\"nextBtn\"\n                                onClick={this.setSupport}    \n                                variant=\"contained\" \n                                color=\"primary\">Next</Button>\n            }\n        }\n\n        // set the state \n        this.supportChange = (event) => {\n                this.setState({\n                    support: event.target.value\n                })\n        }\n\n        //send the state to the Store\n        this.setSupport = () => {\n            const action = {type: 'SUPPORT_LEVEL',\n                            payload:this.state,\n            };\n            this.props.dispatch(action);\n            this.props.history.push('/Comments');\n        }\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Card className=\"card\">\n                    <Typography className=\"cardHeader\">\n                        Do you feel Supported?\n                    </Typography>\n                    <Typography className=\"cardBody\">\n                        <CardContent>\n                            <select onChange={this.supportChange} className=\"cardBody\" placeholder=\"Do you feel Supported?\" >\n                                <option></option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                            </select>\n                        </CardContent>\n                    </Typography>\n                    <CardActions className=\"nextButton\">\n                        {this.disableBtn()}\n                    </CardActions>\n                </Card>\n                <YourFeedback />\n            </div>\n        );\n    }\n}\n// ReactDOM.render(<App />,document.getElementById('app')); \nexport default connect(mapReduxStoreToProps,)(Support);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport YourFeedback from '../Feedback/YourFeedback.js';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport '../Feeling/Feeling.css';\n\n\n\nfunction mapReduxStoreToProps(state) {\n    return {\n\n    };\n}\n\nclass Comments extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            comments:  '',\n        };\n\n           //disable the next button until a value is selected\n           this.disableBtn = () => {\n            if (this.state.comments === '') {\n                return <Button variant=\"contained\" color=\"primary\" disabled>Next</Button>\n            } else {\n                return <Button className=\"nextBtn\"\n                                onClick={this.setComment}     \n                                variant=\"contained\" \n                                color=\"primary\">Next</Button>\n            }\n        }\n\n        // set the state \n        this.commentChange = (event) => {\n                this.setState({\n                    comments: event.target.value\n                })\n        }\n\n        //send the state to the Store\n        this.setComment = () => {\n            const action = {type: 'COMMENTS',\n                            payload:this.state,\n            };\n            this.props.dispatch(action);\n            console.log('Comment Next Click', this.state);\n            this.props.history.push('/YourFeedback');\n        }\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Card className=\"card\">\n                    <Typography className=\"cardHeader\">\n                        Additional Comments?\n                    </Typography>\n                    <Typography className=\"cardBody\">\n                        <CardContent>\n                            <input type=\"text\" placeholder=\"Comments\" onChange={this.commentChange} />\n                        </CardContent>\n                    </Typography>\n                    <CardActions className=\"nextButton\">\n                        {this.disableBtn()}\n                    </CardActions>\n                </Card>\n                <YourFeedback />\n            </div>\n        );\n    }\n}\n  \n\nexport default connect(\n    mapReduxStoreToProps,\n)(Comments);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Header from '../Header/Header.js';\nimport './ThankYou.css';\n\n\n\nclass ThankYou extends Component {\n\n    thankClick = () => {\n        this.props.history.push('/');\n    }\n\n\n    render() {\n        return (\n            <div className=\"container\">\n              \n                <h3 className=\"header\">Thank You for the Feedback!</h3>\n\n                {/* this button will not center for a reson I can't fugure out */}\n                <div class=\"sButton\">\n                <Button onClick={this.thankClick} className=\"thankYouBtn\" variant=\"contained\" color=\"primary\">Start another Review</Button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default ThankYou;","import React, { Component } from 'react';\n// import axios from 'axiosnpm run server';\nimport './App.css';\nimport Header from '../Header/Header.js';\nimport Feeling from '../Feeling/Feeling.js';\nimport Understanding from '../Understanding/Understanding.js';\nimport Supported from '../Support/Supported.js';\nimport Comments from '../Comments/Comments.js';\nimport YourFeedback from '../Feedback/YourFeedback.js';\nimport ThankYou from '../ThankYou/ThankYou.js';\nimport { HashRouter as Router, Route,} from 'react-router-dom';\n\n\nclass App extends Component {\n\n\n  render() {\n    return (\n      <div className=\"container\">\n         <Header />\n          <div>\n            <Router>\n            <div>\n            <Route exact path=\"/\" component={Feeling} />\n            <Route exact path=\"/Understanding\" component={Understanding} /> \n            <Route exact path=\"/Supported\" component={Supported} />\n            <Route exact path=\"/Comments\" component={Comments} />\n            <Route exact path=\"/YourFeedback\" component={YourFeedback} />\n            <Route exact path=\"/ThankYou\" component={ThankYou} />\n            {/* <Route exact path=\"/admin\" component={Admin} />  */}\n            </div>\n        </Router>\n    </div>\n    \n     \n        {/* <Feeling /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker';\n\n//import Redux\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\n// import { isNull } from 'util';\n\n//reducer for feelingToday component\nconst feelingToday = (state = 0, action) => {\n   if(action.type === 'SET_FEELING'){\n        // console.log('In FEELING', state);\n        const addFeeling = action.payload;\n        return addFeeling; \n    }\n        return state;\n}\n\n//Reducer for the understanding component\nconst understandToday = (state = 0, action) => {\n    if(action.type === 'UNDERSTAND_TODAY'){\n        console.log('In UNDERSTAND', state );\n        const addUnderstand = action.payload;\n        return addUnderstand;\n    } \n    return state;\n}\n\n//Reducer for the Support level\nconst supportLevel = (state = 0, action) => {\n    if(action.type === 'SUPPORT_LEVEL'){\n       console.log('In SUPPORT', state);\n        const addSupport = action.payload;\n        return addSupport;\n       \n    }\n    return state;\n}\n\n//Reducer for the additional comments \nconst addComments = (state = '', action) => {\n    if(action.type === 'COMMENTS'){\n        console.log('In Comments', state);\n        const comments = action.payload;\n        return comments;\n    }\n    return state;\n}\n\n//Create store\nconst store = createStore(\n    combineReducers({\n        feelingToday,\n        understandToday,\n        supportLevel,\n        addComments,  \n    }),\n    applyMiddleware(logger),\n);\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}